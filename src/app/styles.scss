// ============================================
// SASS VARIABLES - Variables para colores, tipografías, espaciados, etc.
// ============================================

// Colores principales
$primary-color: #2c5530;
$secondary-color: #4a7c59;
$accent-color: #6bcf7f;
$background-color: #f8f9fa;
$text-color: #333;
$text-light: #666;
$white: #ffffff;
$black: #000000;

// Colores de estado
$success-color: #28a745;
$warning-color: #ffc107;
$error-color: #dc3545;
$info-color: #17a2b8;

// Gradientes
$gradient-primary: linear-gradient(135deg, $primary-color 0%, $secondary-color 100%);
$gradient-accent: linear-gradient(135deg, $accent-color 0%, lighten($accent-color, 10%) 100%);

// Tipografías
$font-family-primary: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
$font-family-heading: 'Georgia', serif;

// Tamaños de fuente
$font-size-xs: 0.75rem;
$font-size-sm: 0.875rem;
$font-size-base: 1rem;
$font-size-lg: 1.125rem;
$font-size-xl: 1.25rem;
$font-size-2xl: 1.5rem;
$font-size-3xl: 1.875rem;
$font-size-4xl: 2.25rem;
$font-size-5xl: 3rem;

// Espaciados
$spacing-xs: 0.25rem;
$spacing-sm: 0.5rem;
$spacing-md: 1rem;
$spacing-lg: 1.5rem;
$spacing-xl: 2rem;
$spacing-2xl: 3rem;
$spacing-3xl: 4rem;

// Breakpoints
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;
$breakpoint-2xl: 1400px;

// Bordes y sombras
$border-radius-sm: 4px;
$border-radius-md: 8px;
$border-radius-lg: 12px;
$border-radius-xl: 16px;
$border-radius-full: 50%;

$shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
$shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
$shadow-lg: 0 8px 25px rgba(0, 0, 0, 0.1);
$shadow-xl: 0 20px 25px rgba(0, 0, 0, 0.15);

// Transiciones
$transition-fast: 0.15s ease;
$transition-normal: 0.2s ease;
$transition-slow: 0.3s ease;

// ============================================
// SASS MIXINS - Funciones reutilizables
// ============================================

// Mixin para flexbox centrado
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mixin para flexbox con dirección
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Mixin para grid
@mixin grid($columns: 1fr, $gap: 1rem) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}

// Mixin para botones
@mixin button($bg-color: $primary-color, $text-color: $white, $padding: $spacing-md $spacing-lg) {
  background-color: $bg-color;
  color: $text-color;
  padding: $padding;
  border: none;
  border-radius: $border-radius-md;
  cursor: pointer;
  font-size: $font-size-base;
  font-weight: 500;
  transition: all $transition-normal;
  text-decoration: none;
  display: inline-block;
  
  &:hover {
    background-color: darken($bg-color, 10%);
    transform: translateY(-2px);
    box-shadow: $shadow-md;
  }
  
  &:active {
    transform: translateY(0);
  }
}

// Mixin para cards
@mixin card($padding: $spacing-xl, $shadow: $shadow-md) {
  background: $white;
  padding: $padding;
  border-radius: $border-radius-lg;
  box-shadow: $shadow;
  border: 1px solid rgba(0, 0, 0, 0.05);
  transition: all $transition-normal;
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-lg;
  }
}

// Mixin para responsive design
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Mixin para texto truncado
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin para placeholder
@mixin placeholder {
  &::placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

// ============================================
// SASS FUNCTIONS - Funciones personalizadas
// ============================================

// Función para calcular el contraste de color
@function contrast-color($color, $light: $white, $dark: $black) {
  $lightness: lightness($color);
  @return if($lightness > 50%, $dark, $light);
}

// Función para crear sombras más suaves
@function soft-shadow($color: $black, $opacity: 0.1) {
  @return 0 4px 6px rgba($color, $opacity);
}

// Función para calcular el tamaño de fuente responsive
@function responsive-font($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  @return calc(#{$min-size} + #{strip-unit($max-size - $min-size)} * ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}));
}

// Función auxiliar para remover unidades
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// ============================================
// SASS EXTENDS - Herencia de estilos
// ============================================

%button-base {
  border: none;
  cursor: pointer;
  font-weight: 500;
  text-decoration: none;
  display: inline-block;
  transition: all $transition-normal;
  border-radius: $border-radius-md;
}

%card-base {
  background: $white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  transition: all $transition-normal;
}

%text-gradient {
  background: $gradient-primary;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// ============================================
// ESTILOS GLOBALES
// ============================================

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  font-family: $font-family-primary;
  line-height: 1.6;
  color: $text-color;
  background-color: lighten($background-color, 2%);
}

// ============================================
// COMPONENTES PRINCIPALES
// ============================================

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: $spacing-xl;
  
  @include respond-to(md) {
    padding: $spacing-lg;
  }
  
  @include respond-to(sm) {
    padding: $spacing-md;
  }
}

.hero {
  text-align: center;
  margin-bottom: $spacing-2xl;
  padding: $spacing-3xl 0;
  background: $gradient-primary;
  border-radius: $border-radius-xl;
  color: $white;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.3;
  }
  
  h1 {
    font-size: $font-size-5xl;
    margin-bottom: $spacing-lg;
    font-weight: 700;
    position: relative;
    z-index: 1;
    
    @include respond-to(md) {
      font-size: $font-size-4xl;
    }
    
    @include respond-to(sm) {
      font-size: $font-size-3xl;
    }
  }
  
  p {
    font-size: $font-size-xl;
    opacity: 0.9;
    position: relative;
    z-index: 1;
    
    @include respond-to(sm) {
      font-size: $font-size-lg;
    }
  }
}

.features {
  @include grid(repeat(auto-fit, minmax(300px, 1fr)), $spacing-xl);
  margin-top: $spacing-2xl;
  
  @include respond-to(sm) {
    @include grid(1fr, $spacing-lg);
  }
}

.feature-card {
  @extend %card-base;
  @include card($spacing-xl, $shadow-md);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: $gradient-accent;
  }
  
  &:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: $shadow-xl;
    
    &::before {
      height: 6px;
    }
  }
  
  h3 {
    font-size: $font-size-2xl;
    margin-bottom: $spacing-lg;
    color: $primary-color;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: $spacing-sm;
  }
  
  p {
    color: $text-light;
    line-height: 1.6;
    font-size: $font-size-base;
  }
}

// ============================================
// COMPONENTES ADICIONALES CON SASS
// ============================================

.btn {
  @extend %button-base;
  @include button($primary-color, $white);
  
  &--secondary {
    @include button($secondary-color, $white);
  }
  
  &--accent {
    @include button($accent-color, $white);
  }
  
  &--outline {
    background: transparent;
    color: $primary-color;
    border: 2px solid $primary-color;
    
    &:hover {
      background: $primary-color;
      color: $white;
    }
  }
  
  &--large {
    padding: $spacing-lg $spacing-2xl;
    font-size: $font-size-lg;
  }
  
  &--small {
    padding: $spacing-sm $spacing-md;
    font-size: $font-size-sm;
  }
}

.card {
  @extend %card-base;
  @include card();
  
  &--elevated {
    box-shadow: $shadow-lg;
    
    &:hover {
      box-shadow: $shadow-xl;
    }
  }
  
  &--gradient {
    background: $gradient-primary;
    color: $white;
  }
}

.text {
  &--gradient {
    @extend %text-gradient;
  }
  
  &--center {
    text-align: center;
  }
  
  &--truncate {
    @include text-truncate;
  }
}

// ============================================
// UTILIDADES
// ============================================

.mb-1 { margin-bottom: $spacing-xs; }
.mb-2 { margin-bottom: $spacing-sm; }
.mb-3 { margin-bottom: $spacing-md; }
.mb-4 { margin-bottom: $spacing-lg; }
.mb-5 { margin-bottom: $spacing-xl; }

.mt-1 { margin-top: $spacing-xs; }
.mt-2 { margin-top: $spacing-sm; }
.mt-3 { margin-top: $spacing-md; }
.mt-4 { margin-top: $spacing-lg; }
.mt-5 { margin-top: $spacing-xl; }

.p-1 { padding: $spacing-xs; }
.p-2 { padding: $spacing-sm; }
.p-3 { padding: $spacing-md; }
.p-4 { padding: $spacing-lg; }
.p-5 { padding: $spacing-xl; }

.d-flex { @include flex(); }
.d-flex-center { @include flex-center(); }
.d-grid { @include grid(); }

// ============================================
// ANIMACIONES
// ============================================

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

// ============================================
// RESPONSIVE DESIGN
// ============================================

@include respond-to(sm) {
  .container {
    padding: $spacing-md;
  }
  
  .hero {
    padding: $spacing-2xl 0;
    
    h1 {
      font-size: $font-size-3xl;
    }
    
    p {
      font-size: $font-size-lg;
    }
  }
  
  .features {
    @include grid(1fr, $spacing-lg);
  }
  
  .feature-card {
    padding: $spacing-lg;
  }
}
